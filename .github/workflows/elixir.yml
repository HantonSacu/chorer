name: Elixir CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "postgres"
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      CACHE_VERSION: v3
      RELEASE_LEVEL: CI
    steps:
      - uses: actions/checkout@v3

      - uses: erlef/setup-beam@v1
        with:
          otp-version: '24.1'
          elixir-version: '1.13'

      - name: Restore cached deps
        uses: actions/cache@v3
        with:
          path: |
            deps
             _build
          key: deps-${{ env.CACHE_VERSION }}-${{ github.ref }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            deps-${{ env.CACHE_VERSION }}-${{ github.ref }}-
            deps-${{ env.CACHE_VERSION }}-

      - name: Run CI checks
        uses: ./.github/workflows/actions/test

  build:
    needs: test
    name: Build, push, and deploy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Deploy
      uses: ./.github/workflows/actions/deploy
      with:
        ssh-private-key: ${{ secrets.VBT_DEPLOY_SSH_PRIVATE_KEY }}
        heroku-api-key: fbaf23ad-6e54-4057-af41-6ca5d56fbb99
        heroku-app-name: chorer
